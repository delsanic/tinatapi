<div class="container container-main">
    <div class="row">
        <div class="col-sm-12">
            <h1>
                Global economies
            </h1>
            <p class="lead">
                Income disparity, as measured by the World Bank
            </p>
            <div class="clearfix">
                <div style="height: 20px; width: 20px; margin-right: 10px; background: #005f00;" class="pull-left"></div>
                <span class="pull-left">High income</span>
                <div style="height: 20px; width: 20px; margin: 0 10px; background: #188803;" class="pull-left"></div>
                <span class="pull-left">High middle income</span>
                <div style="height: 20px; width: 20px; margin: 0 10px; background: #279e20;" class="pull-left"></div>
                <span class="pull-left">Low middle income</span>
                <div style="height: 20px; width: 20px; margin: 0 10px; background: #4ca948;" class="pull-left"></div>
                <span class="pull-left">Low income</span>
            </div>
            <div id="map" class="world-map">
                <h3 class="country-name"></h3>
            </div>
            <p class="text-right">
                 Map created with <a href="http://polymaps.org">PolyMaps</a>, the <a href="http://thematicmapping.org">World Borders Dataset</a> and <strong>Tinatapi</strong>.
            </p>
         </div>
    </div>
</div>
<script type="text/javascript" src="/js/modernizr.min.js"></script>
<script type="text/javascript" src="/js/polymaps.min.js"></script>
<script type="text/javascript" src="/js/nns.min.js"></script>
<script>
var po = org.polymaps;

var map = po.map()
    .container(document.getElementById("map").appendChild(po.svg("svg")))
    .center({lat: 30, lon: 0})
    .zoom(2.1);

map.add(po.geoJson()
    .url("/js/world-polymap.json")
    .tile(false)
    .zoom(3)
    .on("load", plotMap));

function plotMap(e) {
    $.getJSON( "/countries.json", function(countries) {

        $('#map').css({visibility: 'visible'});
        
        for (var i = 0; i < e.features.length; i++) {
            var feature = e.features[i];
            var countryName = feature.data.properties.name;
                
            var tileText = countryName;
            var tileStyle = "fill: transparent;";
            tileStyle = "fill: rgba(0,0,0,0.25);";
            for (c in countries) {
                if (countryName == countries[c].name) {
                    try {
                        if (countries[c].economy.incomeRating == 1)
                            tileStyle = "fill: #4ca948;";
                        if (countries[c].economy.incomeRating == 2)
                            tileStyle = "fill: #279e20;";
                        if (countries[c].economy.incomeRating == 3)
                            tileStyle = "fill: #188803;";
                        if (countries[c].economy.incomeRating == 4)
                            tileStyle = "fill: #005f00;";
                    } catch (e){}
                }
            }
                
            $(feature.element).on('mouseover', function() {
                $('.country-name').html( $(this).data('countryName') );
            });
            
            $(feature.element).on('mouseout', function() {
                $('.country-name').html('');
            });
            
            $(feature.element).on('click touch', function() {
                window.location = "/countries/"+encodeURIComponent( $(this).data('countryName').replace(" ", "_") );
            });

            n$(feature.element)
                .attr("style", tileStyle)
                .attr("class", "interactive")
                .attr("data-toggle", "popover")
                .attr("data-placement", "top")
                .attr("data-country-name", countryName)
                .text(tileText)
                .add("svg:title");
        }
    });
}
</script>